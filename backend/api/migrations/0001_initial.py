# Generated by Django 5.1.4 on 2024-12-18 09:06

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Publishers',
            fields=[
                ('pubid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('company_name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=20)),
                ('state', models.CharField(max_length=10)),
                ('zip', models.CharField(max_length=15)),
                ('telephone', models.CharField(max_length=15)),
                ('fax', models.CharField(max_length=15)),
                ('comments', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, related_name='apiuser_groups', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='apiuser_permissions', to='auth.permission', verbose_name='user permissions')),
            ],
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('au_id', models.AutoField(primary_key=True, serialize=False)),
                ('author', models.CharField(db_index=True, max_length=50)),
                ('year_born', models.SmallIntegerField()),
            ],
            options={
                'indexes': [models.Index(fields=['author', 'year_born'], name='api_author_author_518728_idx')],
            },
        ),
        migrations.CreateModel(
            name='Title',
            fields=[
                ('title_id', models.AutoField(primary_key=True, serialize=False)),
                ('isbn', models.CharField(max_length=20, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('year_published', models.SmallIntegerField()),
                ('description', models.CharField(max_length=50)),
                ('notes', models.CharField(blank=True, max_length=50, null=True)),
                ('subject', models.CharField(blank=True, max_length=50, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='book_covers/')),
                ('authors', models.ManyToManyField(related_name='titles', to='api.author')),
                ('pubid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='titles', to='api.publishers')),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reserved_at', models.DateTimeField(auto_now_add=True)),
                ('returned_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to=settings.AUTH_USER_MODEL)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='api.title')),
            ],
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='api_user_email_a7eefd_idx'),
        ),
        migrations.AddIndex(
            model_name='title',
            index=models.Index(fields=['title'], name='api_title_title_defead_idx'),
        ),
        migrations.AddIndex(
            model_name='title',
            index=models.Index(fields=['isbn'], name='api_title_isbn_92603a_idx'),
        ),
        migrations.AddIndex(
            model_name='title',
            index=models.Index(fields=['year_published'], name='api_title_year_pu_8e4881_idx'),
        ),
        migrations.AddIndex(
            model_name='reservation',
            index=models.Index(fields=['user', 'book'], name='api_reserva_user_id_22558c_idx'),
        ),
        migrations.AddIndex(
            model_name='reservation',
            index=models.Index(fields=['reserved_at'], name='api_reserva_reserve_f1df15_idx'),
        ),
    ]
